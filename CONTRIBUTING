# Contributing to Version-Bumpify

We welcome contributions of all kinds to make this project better. To ensure smooth collaboration, please follow the guidelines below.

## Getting Started

1. **Fork the repository**  
   Create a fork of this repository to work on your contributions without affecting the main branch.

2. **Clone the repository**  
   Use the following command to clone the repository to your local machine:

   ```bash
   git clone https://github.com/amjaradat01/version-bumpify.git
   ```

3. **Set up the environment**  
   Follow the installation instructions in the README.md file to get your development environment up and running.

4. **Use Git-Flow**  
   This project uses [git-flow](https://nvie.com/posts/a-successful-git-branching-model/) for version management. Make sure you install and configure git-flow before starting contributions:

   ```bash
   git flow init
   ```

   - Use `git flow feature start feature-name` for new features.
   - Use `git flow bugfix start bugfix-name` for bug fixes.
   - Finish your feature or bugfix branch using `git flow feature finish` or `git flow bugfix finish` respectively.

## Code of Conduct

Be respectful and inclusive in all interactions. Review our [Code of Conduct](CODE_OF_CONDUCT.md) for details.

## Style Guidelines

1. **Code style**  
   Follow the existing code style. Make sure to run linters and formatters as configured.
   
   - Use [ESLint](https://eslint.org/) for JavaScript/TypeScript.
   - Use [Prettier](https://prettier.io/) for formatting.

2. **Commit messages**  
   Write clear and descriptive commit messages. Use the following format:
   
   ```
   [type]: Short description (Fixes #issue-number)
   ```

   - Types: `feat`, `fix`, `chore`, `docs`, `style`, `refactor`, `test`
   - Example: `feat: Add support for environment variables (Fixes #34)`

## Submitting a Pull Request

1. **Push to your branch**  
   Once you have made changes, push them to your forked repository:

   ```bash
   git push origin feature/short-description
   ```

2. **Open a pull request**  
   Go to the original repository and open a pull request (PR) against the `main` branch. Be sure to:
   
   - Provide a descriptive title
   - Link to the relevant issue(s)
   - Include a summary of your changes
   - Mention if there are any breaking changes

3. **PR review and approval**  
   After submitting your PR, the maintainers will review your code. Make sure to:
   
   - Respond to feedback in a timely manner
   - Make necessary changes as requested

4. **Merge**  
   Once your PR is approved, a maintainer will merge it.

Thank you for contributing!
